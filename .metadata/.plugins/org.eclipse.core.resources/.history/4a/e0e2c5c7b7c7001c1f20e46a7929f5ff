/**
 * 
 */
package br.dev.rca;

/**
 * @author renan
 *
 */
public class CaixaEletronico {

	private Hardware hardware;
	private ServicoRemoto servicoRemoto;
	private ContaCorrente contaCorrente;

	public void adicionarHardware(Hardware hardware) {
		this.hardware = hardware;
	}

	public void adicionarServicoRemoto(ServicoRemoto servicoRemoto) {
		this.servicoRemoto = servicoRemoto;
	}

	public String logar() {
		this.contaCorrente = servicoRemoto.recuperarConta(this.hardware.pegarNumeroDaContaCartao());

		if (contaCorrente != null)
			return "Usuário autenticado.";
		return "Não foi possível autenticar usuário.";
	}

	public String saldo() {
		return String.format("O saldo é R$%.2f", this.contaCorrente.getSaldo());
	}

	public String sacar(double valorSaque) {
		if (valorSaque <= this.contaCorrente.getSaldo()) {
			double novoSaldo = this.contaCorrente.getSaldo() - valorSaque;
			try {
				this.hardware.entregarDinheiro(valorSaque);				
			} catch(HardwareException ex) {
				System.out.println(ex.getMessage());
			}
			this.servicoRemoto.persistirConta(this.contaCorrente, novoSaldo);
			return "Retire o seu dinheiro.";
		}

		return "Saldo insuficiente.";
	}

	public Object depositar(double valorDeposito) {
		if (valorDeposito > 0) {
			double novoSaldo = this.contaCorrente.getSaldo() + valorDeposito;
			this.hardware.lerEnvelope(valorDeposito);
			this.servicoRemoto.persistirConta(this.contaCorrente, novoSaldo);
			return "Depósito recebido com sucesso.";
		}

		return "Depósito não realizado.";
	}

}
