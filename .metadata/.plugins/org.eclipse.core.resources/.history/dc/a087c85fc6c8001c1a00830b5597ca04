/**
 * 
 */
package br.dev.rca;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author renan
 *
 */
public class Armazenamento implements IArmazenamento {
	private String arquivo;
	private Map<String, Map<String, Integer>> placares;

	public Armazenamento(String nomeArquivo) {
		this.arquivo = nomeArquivo;
		placares = new HashMap<>();
		Jason.lerDeArquivo(this.arquivo);
	}

	@Override
	public void armazenarPontos(String usuario, String tipo, int valor) {
		Map<String, Integer> pontos = new HashMap<>();
		pontos.put(tipo, valor);
		Jason.lerDeArquivo(this.arquivo);
		placares.put(usuario, pontos);
		Jason.gravarEmArquivo(this.arquivo, this.placares);
	}

	@Override
	public int recuperarPontos(String usuario, String tipo) {
		this.placares = Jason.lerDeArquivo(this.arquivo);
		Map<String, Integer> pontos = this.placares.get(usuario);
		String aux = "" + pontos.get(tipo);
		double d = Double.valueOf(aux);
		return (int) d;
	}

	@Override
	public List<String> retornarTodosUsuariosComPonto() {
		List<String> usuariosComPontos = new ArrayList<>();
		for (String usuario : this.placares.keySet()) {
			usuariosComPontos.add(usuario);
		}
		return usuariosComPontos;
	}

	@Override
	public List<String> retornarTodosTiposPontosUmUsuario(String usuario) {
		List<String> tipos = new ArrayList<>();
		Map<String, Integer> placar = this.placares.get(usuario);
		for (String tipo : placar.keySet()) {
			tipos.add(tipo);
		}
		return tipos;
	}

}
